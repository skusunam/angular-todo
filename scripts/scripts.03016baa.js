"use strict";!function(){function a(a,b){a.$on("$routeChangeError",function(a){console.log("$routeChangeError"),a.authenticated||b.path("/login")})}function b(a){function b(a,b){return b.isUserLoggedIn()?a.when(!0):a.reject({authenticated:!1})}Parse.initialize("quEQw1Yal6U7nYh9JUZ3eefGky4zF1kPpJOMzhwU","2Cvg0ii5WHeVxU5ypCKeEwW1uAuB0y76u2ycYIlm"),a.when("/",{templateUrl:"views/main.html"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl",controllerAs:"signup"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/todos",{templateUrl:"views/todos.html",controller:"TodosCtrl",controllerAs:"todos",resolve:{isAuthenticated:b}}).otherwise({redirectTo:"/"}),b.$inject=["$q","UserService"]}angular.module("angularTodoApp",["ngRoute","ngAnimate","cgBusy"]).run(a).config(b),a.$inject=["$rootScope","$location"],b.$inject=["$routeProvider"]}(),function(){function a(a,b,c){function d(){console.log(e.registeredUser);var d=b.signUp(e.registeredUser);e.busyPromise=d,d.then(function(){c.setMessage("User Saved Succesfully. Please login with your credentials."),console.log(e.status),a.path("/login")})}console.log("SignupController called");var e=this;e.save=d,e.registeredUser={firstName:"",lastName:"",email:"",password:""}}angular.module("angularTodoApp").controller("SignupCtrl",a),a.$inject=["$location","ParseService","UserService"]}(),function(){function a(a){this.signUp=function(b){var c=Parse.Object.extend("TodoUser"),d=new c;d.set("email",b.email),d.set("firstName",b.firstName),d.set("lastName",b.lastName),d.set("password",b.password);var e=a.defer();return d.save({success:function(a){console.log("signup: success  "+a),e.resolve(a)},error:function(a){console.log("signup: error",a),e.reject(a)}}),e.promise},this.login=function(b,c){var d=Parse.Object.extend("TodoUser"),e=new Parse.Query(d);e.equalTo("email",b),e.equalTo("password",c);var f=a.defer();return e.count({success:function(a){console.log("login: count = "+a),f.resolve(a)},error:function(a){console.log("login: error",a),f.reject(a)}}),f.promise}}angular.module("angularTodoApp").service("ParseService",a),a.$inject=["$q"]}(),function(){function a(){var a,b={},c=!1;this.setMessage=function(b){a=b},this.getMessage=function(){return a},this.getUser=function(){return b},this.setUser=function(a){b=a},this.setUserLoggedIn=function(a){c=a},this.isUserLoggedIn=function(){return c}}angular.module("angularTodoApp").service("UserService",a)}(),function(){function a(a,b,c){function d(){console.log(e.user.username,e.user.password);var d=c.login(e.user.username,e.user.password);e.busyPromise=d,d.then(function(c){console.log("user count = "+c),0===c?e.message="Invalid credentials. Please verify email/password":(b.setMessage(""),b.setUserLoggedIn(!0),a.path("/todos"))})}var e=this;e.message=b.getMessage(),e.login=d,e.user={username:"",password:""}}angular.module("angularTodoApp").controller("LoginCtrl",a),a.$inject=["$location","UserService","ParseService"]}(),function(){function a(){console.log("TodosCtrl called")}angular.module("angularTodoApp").controller("TodosCtrl",a),a.$inject=[]}(),function(){function a(a,b,c){var d=this;d.loggedIn=!1,d.logout=function(){c.setUserLoggedIn(!1),b.path("/login")},a.$watch(c.isUserLoggedIn,function(a,b){console.log(a,b),d.loggedIn=a})}angular.module("angularTodoApp").controller("NavCtrl",a),a.$inject=["$scope","$location","UserService"]}();